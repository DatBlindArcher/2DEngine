package character.controller;

import java.awt.Color;
import java.awt.event.KeyEvent;

import org.w3c.dom.Node;

import game.engine.*;

public class Character extends CharacterController
{
	float speed = 200f;

	public Character() { }
	public Character(Node xml)
	{
		super(xml);
	}
	
	public void update()
	{
		Vector2 delta = new Vector2();
		
		if(Input.getKey(KeyEvent.VK_W) || Input.getKey(KeyEvent.VK_UP))
		{
			delta.y--;
		}
		
		if(Input.getKey(KeyEvent.VK_S) || Input.getKey(KeyEvent.VK_DOWN))
		{
			delta.y++;
		}
		
		if(Input.getKey(KeyEvent.VK_A) || Input.getKey(KeyEvent.VK_LEFT))
		{
			delta.x--;
		}
		
		if(Input.getKey(KeyEvent.VK_D) || Input.getKey(KeyEvent.VK_RIGHT))
		{
			delta.x++;
		}
		
		if(Input.getMouseButtonDown(0))
		{
			System.out.println("Bullet spawned.");
			GameObject.create(new GameObject("Bullet", "Projectile", new Component[] { new Projectile(), new CircleCollider(), new Image("/Images/Circle.png", 1, Color.orange) }), transform.position.addtemp(transform.forward()).multiply(200f), transform.rotation, new Vector2(0.5f, 0.5f));
		}
		
		Vector2 mouse = Input.getMousePosition();
		mouse.add(new Vector2(-Screen.width / 2f, -Screen.height / 2f));
		float angle = (float)Math.toDegrees(Math.atan((mouse.y / (Screen.height / 2f)) / (mouse.x / (Screen.width / 2f))));
		transform.rotation = angle;
		
		super.move(delta.multiply(Time.deltaTime * speed));
	}
}